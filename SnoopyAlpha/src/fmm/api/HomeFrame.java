/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fmm.api;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import jaco.mp3.player.MP3Player;
import static java.awt.JobAttributes.DestinationType.FILE;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.print.attribute.standard.ReferenceUriSchemesSupported.FILE;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.tika.exception.TikaException;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.parser.mp3.Mp3Parser;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import static sun.audio.AudioPlayer.player;

/**
 *
 * @author Pichau
 */
public class HomeFrame extends javax.swing.JFrame {

    MP3Player player;
    File songFile;
    String currentDirectory = "user";
    ArrayList<String> playlist = new ArrayList();
    ArrayList<String> artista = new ArrayList();
    ArrayList<String> album = new ArrayList();
    int i = 0, list = 0;
    
    public HomeFrame() {
        initComponents();
        setResizable(false);
        player = mp3Player();
        setSize(800,600);
        lblPlaylist.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblPlaylist = new javax.swing.JEditorPane();
        lblContinue = new javax.swing.JLabel();
        lblPause = new javax.swing.JLabel();
        lblAbrir = new javax.swing.JLabel();
        lblArtistaAlbum = new javax.swing.JLabel();
        lblMusica = new javax.swing.JLabel();
        lblAnterior = new javax.swing.JLabel();
        lblProximo = new javax.swing.JLabel();
        lblParar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(lblPlaylist);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 230, 270, 160));

        lblContinue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/ContinueButton.png"))); // NOI18N
        lblContinue.setToolTipText("Play");
        lblContinue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblContinue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblContinueMouseClicked(evt);
            }
        });
        getContentPane().add(lblContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 460, 70, 70));

        lblPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/PauseButton.png"))); // NOI18N
        lblPause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPauseMouseClicked(evt);
            }
        });
        getContentPane().add(lblPause, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 460, 70, 70));

        lblAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Abrir Arquivo.png"))); // NOI18N
        lblAbrir.setToolTipText("Open File");
        lblAbrir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAbrirMouseClicked(evt);
            }
        });
        getContentPane().add(lblAbrir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 470, 50, 50));

        lblArtistaAlbum.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        lblArtistaAlbum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArtistaAlbum.setText("Artista - Álbum");
        lblArtistaAlbum.setPreferredSize(new java.awt.Dimension(600, 24));
        lblArtistaAlbum.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(lblArtistaAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, -1, -1));

        lblMusica.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        lblMusica.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMusica.setText("Nome da música");
        lblMusica.setPreferredSize(new java.awt.Dimension(600, 32));
        getContentPane().add(lblMusica, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, -1, -1));

        lblAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Anterior.png"))); // NOI18N
        lblAnterior.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnteriorMouseClicked(evt);
            }
        });
        getContentPane().add(lblAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, -1, -1));

        lblProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Proxima.png"))); // NOI18N
        lblProximo.setToolTipText("Next");
        lblProximo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblProximo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblProximoMouseClicked(evt);
            }
        });
        getContentPane().add(lblProximo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 470, -1, -1));

        lblParar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Parar.png"))); // NOI18N
        lblParar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblParar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPararMouseClicked(evt);
            }
        });
        getContentPane().add(lblParar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Snoopy2.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 200, 200));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fmm/assets/Background.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPauseMouseClicked
        lblContinue.setVisible(true);
        player.pause();
    }//GEN-LAST:event_lblPauseMouseClicked

    private void lblContinueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblContinueMouseClicked
        lblContinue.setVisible(false);
        player.play();
        lblMusica.setText(playlist.get(list));
        lblArtistaAlbum.setText(artista.get(list)+" - "+album.get(list));
    }//GEN-LAST:event_lblContinueMouseClicked

    private void lblAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAbrirMouseClicked

        JFileChooser openFileChooser = new JFileChooser(currentDirectory);
        openFileChooser.setFileFilter(new FileTypeFilter(".mp3", "Open MP3 Files Only!"));
        int result = openFileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            songFile = openFileChooser.getSelectedFile();
            player.addToPlayList(songFile);
            currentDirectory = songFile.getAbsolutePath();
            playlist.add(songFile.getName());
            playlist.set(i, playlist.get(i).replace(".mp3", " "));
            
            try {

                InputStream input = new FileInputStream(new File(currentDirectory));
                ContentHandler handler = new DefaultHandler();
                Metadata metadata = new Metadata();
                Parser parser = new Mp3Parser();
                ParseContext parseCtx = new ParseContext();
                parser.parse(input, handler, metadata, parseCtx);
                input.close();

                String[] metadataNames = metadata.names();

        
                artista.add(metadata.get("xmpDM:artist"));
                album.add(metadata.get("xmpDM:album"));       
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (SAXException e) {
                e.printStackTrace();
            } catch (TikaException e) {
                e.printStackTrace();
            }
            
            lblPlaylist.setText(lblPlaylist.getText()+playlist.get(i)+" - "+artista.get(i)+"\n");
            
            i++;
        }
             
    }//GEN-LAST:event_lblAbrirMouseClicked

    private void lblProximoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblProximoMouseClicked
        
        if(list+1>=i){
            JOptionPane.showMessageDialog(this, "Fim da sua playlist.\nAdicione novas músicas!");
        }
        else if(player.isPaused()){
            player.skipForward();
            player.pause();
            list++;    
        }else{
            player.skipForward();
            list++;
            lblMusica.setText(playlist.get(list));
            lblArtistaAlbum.setText(artista.get(list)+" - "+album.get(list));
            }
    }//GEN-LAST:event_lblProximoMouseClicked

    private void lblAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnteriorMouseClicked
        if(list-1<0){
            JOptionPane.showMessageDialog(this, "Não há nada por aqui.\nPor favor, clique em próximo!");
        }
        else if(player.isPaused()){
            player.skipBackward();
            player.pause();
            list--; 
        }else{
            player.skipBackward();
            list--;
            lblMusica.setText(playlist.get(list));
            lblArtistaAlbum.setText(artista.get(list)+" - "+album.get(list));
            }
        
    }//GEN-LAST:event_lblAnteriorMouseClicked

    private void lblPararMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPararMouseClicked
        player.stop();
        lblMusica.setText("Música");
        lblArtistaAlbum.setText("Artista - Álbum");
        for(int aux = 0; aux<playlist.size() ; aux++)
        {
            playlist.remove(aux);
            artista.remove(aux);
            album.remove(aux);
        }
        i = 0; list = 0;
    }//GEN-LAST:event_lblPararMouseClicked

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        int aux = JOptionPane.showConfirmDialog(this, "Você realmente deseja sair?", "Sair", JOptionPane.YES_NO_OPTION);
        if(aux == 0) 
        {
            player.stop();
            LoginFrame a = new LoginFrame();
            a.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAbrir;
    private javax.swing.JLabel lblAnterior;
    private javax.swing.JLabel lblArtistaAlbum;
    private javax.swing.JLabel lblContinue;
    private javax.swing.JLabel lblMusica;
    private javax.swing.JLabel lblParar;
    private javax.swing.JLabel lblPause;
    private javax.swing.JEditorPane lblPlaylist;
    private javax.swing.JLabel lblProximo;
    // End of variables declaration//GEN-END:variables

    private MP3Player mp3Player(){
        MP3Player mp3Player = new MP3Player();
        return mp3Player;
    }
}
